# Generated by Django 5.2.6 on 2025-09-13 17:34

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CommandNode',
            fields=[
                ('node_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('node_name', models.CharField(max_length=100)),
                ('node_type', models.CharField(choices=[('COMMAND', 'Command Center'), ('FIELD', 'Field Unit'), ('MOBILE', 'Mobile Device'), ('RELAY', 'Relay Station'), ('SATELLITE', 'Satellite Link')], max_length=20)),
                ('status', models.CharField(choices=[('ONLINE', 'Online'), ('OFFLINE', 'Offline'), ('RESYNC', 'Resynchronizing'), ('COMPROMISED', 'Compromised'), ('MAINTENANCE', 'Under Maintenance')], default='OFFLINE', max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('public_key', models.TextField(help_text='RSA public key for encryption')),
                ('lamport_clock', models.BigIntegerField(default=0)),
                ('vector_clock', models.JSONField(default=dict, help_text='Vector clock for conflict resolution')),
                ('location_lat', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('location_lon', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_personnel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'command_nodes',
                'ordering': ['-last_seen'],
            },
        ),
        migrations.CreateModel(
            name='MasterLedger',
            fields=[
                ('block_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('block_height', models.BigIntegerField(unique=True)),
                ('transaction_type', models.CharField(choices=[('MESSAGE', 'Message Transaction'), ('SYNC', 'Ledger Sync'), ('KEY_EXCHANGE', 'Key Exchange'), ('SYSTEM', 'System Event'), ('AUDIT', 'Audit Event')], max_length=20)),
                ('message_hash', models.CharField(help_text='SHA-256 hash of encrypted payload', max_length=64)),
                ('payload_encrypted', models.TextField(help_text='AES encrypted message payload')),
                ('payload_decrypted', models.TextField(blank=True, help_text='Decrypted payload for authorized personnel')),
                ('previous_hash', models.CharField(max_length=64)),
                ('merkle_root', models.CharField(max_length=64)),
                ('nonce', models.BigIntegerField(default=0)),
                ('difficulty', models.IntegerField(default=1)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('lamport_timestamp', models.BigIntegerField()),
                ('vector_timestamp', models.JSONField(default=dict)),
                ('digital_signature', models.TextField(help_text='RSA signature for authentication')),
                ('is_validated', models.BooleanField(default=False)),
                ('is_synced', models.BooleanField(default=True, help_text='True if synced from local ledger')),
                ('sync_conflicts', models.JSONField(default=list, help_text='List of conflict resolution details')),
                ('receiver_node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='received_transactions', to='command_center.commandnode')),
                ('sender_node', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sent_transactions', to='command_center.commandnode')),
            ],
            options={
                'db_table': 'master_ledger',
                'ordering': ['-block_height'],
            },
        ),
        migrations.CreateModel(
            name='DecryptedMessage',
            fields=[
                ('message_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('TEXT', 'Text Message'), ('VOICE', 'Voice Message'), ('VIDEO', 'Video Message'), ('FILE', 'File Transfer'), ('COMMAND', 'Command Directive'), ('ALERT', 'Alert/Emergency')], max_length=20)),
                ('classification', models.CharField(choices=[('UNCLASSIFIED', 'Unclassified'), ('RESTRICTED', 'Restricted'), ('CONFIDENTIAL', 'Confidential'), ('SECRET', 'Secret'), ('TOP_SECRET', 'Top Secret')], default='RESTRICTED', max_length=20)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField(help_text='Decrypted message content')),
                ('code_words_used', models.JSONField(default=list, help_text='List of military code words detected')),
                ('media_attachments', models.JSONField(default=list, help_text='List of media file metadata')),
                ('decrypted_at', models.DateTimeField(auto_now_add=True)),
                ('access_log', models.JSONField(default=list, help_text='Log of who accessed this decrypted content')),
                ('decrypted_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('ledger_entry', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='decrypted_content', to='command_center.masterledger')),
            ],
            options={
                'db_table': 'decrypted_messages',
                'ordering': ['-decrypted_at'],
                'permissions': [('view_classified', 'Can view classified messages'), ('view_secret', 'Can view secret messages'), ('view_top_secret', 'Can view top secret messages')],
            },
        ),
        migrations.CreateModel(
            name='CommandAlert',
            fields=[
                ('alert_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('SECURITY', 'Security Alert'), ('ANOMALY', 'AI Anomaly Detection'), ('SYSTEM', 'System Alert'), ('NODE_OFFLINE', 'Node Disconnected'), ('SYNC_CONFLICT', 'Synchronization Conflict'), ('UNAUTHORIZED_ACCESS', 'Unauthorized Access Attempt'), ('MESSAGE_INTEGRITY', 'Message Integrity Violation')], max_length=30)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('ai_confidence_score', models.FloatField(blank=True, help_text='AI confidence score for anomaly alerts', null=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional alert metadata')),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('source_node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='command_center.commandnode')),
                ('related_ledger_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='command_center.masterledger')),
            ],
            options={
                'db_table': 'command_alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MissionAudit',
            fields=[
                ('audit_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mission_name', models.CharField(max_length=200)),
                ('mission_code', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('PLANNING', 'Planning'), ('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('ABORTED', 'Aborted'), ('CLASSIFIED', 'Classified')], max_length=20)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('objectives', models.TextField()),
                ('outcomes', models.TextField(blank=True)),
                ('classification_level', models.CharField(choices=[('UNCLASSIFIED', 'Unclassified'), ('RESTRICTED', 'Restricted'), ('CONFIDENTIAL', 'Confidential'), ('SECRET', 'Secret'), ('TOP_SECRET', 'Top Secret')], max_length=20)),
                ('audit_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('commanding_officer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('participating_nodes', models.ManyToManyField(related_name='missions', to='command_center.commandnode')),
                ('related_ledger_entries', models.ManyToManyField(related_name='mission_audits', to='command_center.masterledger')),
            ],
            options={
                'db_table': 'mission_audits',
                'ordering': ['-start_time'],
            },
        ),
        migrations.AddIndex(
            model_name='masterledger',
            index=models.Index(fields=['sender_node', '-timestamp'], name='master_ledg_sender__12c149_idx'),
        ),
        migrations.AddIndex(
            model_name='masterledger',
            index=models.Index(fields=['receiver_node', '-timestamp'], name='master_ledg_receive_c36a0d_idx'),
        ),
        migrations.AddIndex(
            model_name='masterledger',
            index=models.Index(fields=['message_hash'], name='master_ledg_message_6e27b4_idx'),
        ),
        migrations.AddIndex(
            model_name='masterledger',
            index=models.Index(fields=['-timestamp'], name='master_ledg_timesta_3305d9_idx'),
        ),
        migrations.AddIndex(
            model_name='commandalert',
            index=models.Index(fields=['alert_type', '-created_at'], name='command_ale_alert_t_81ab36_idx'),
        ),
        migrations.AddIndex(
            model_name='commandalert',
            index=models.Index(fields=['severity', '-created_at'], name='command_ale_severit_3959c2_idx'),
        ),
        migrations.AddIndex(
            model_name='commandalert',
            index=models.Index(fields=['is_resolved', '-created_at'], name='command_ale_is_reso_f23ad7_idx'),
        ),
    ]
