"""
Military Communication System - Users URLs

This module defines the URL routing for user-related API endpoints.
Uses Django REST Framework's DefaultRouter for automatic ViewSet routing.
"""

from django.urls import path, include
from rest_framework.routers import DefaultRouter
from rest_framework.authtoken.views import obtain_auth_token

from .views import (
    MilitaryUserViewSet,
    DeviceViewSet,
    UserSessionViewSet,
    SecurityEventViewSet,
)

# Create router and register ViewSets
router = DefaultRouter(trailing_slash=False)
router.register(r'users', MilitaryUserViewSet, basename='militaryuser')
router.register(r'devices', DeviceViewSet, basename='device')
router.register(r'sessions', UserSessionViewSet, basename='usersession')
router.register(r'security-events', SecurityEventViewSet, basename='securityevent')

# URL patterns
urlpatterns = [
    # API root and ViewSet URLs
    path('api/', include(router.urls)),
    
    # Authentication endpoints
    path('auth/token/', obtain_auth_token, name='api_token_auth'),
    
    # Custom authentication endpoints (handled by MilitaryUserViewSet actions)
    # These are automatically generated by the router:
    # POST /api/users/login/ - Login endpoint
    # POST /api/users/logout/ - Logout endpoint
    # GET /api/users/me/ - Current user profile
    # POST /api/users/change_password/ - Change password
    
    # Device management endpoints (automatically generated):
    # GET /api/devices/ - List devices
    # POST /api/devices/ - Create device
    # GET /api/devices/{id}/ - Get device details
    # PUT/PATCH /api/devices/{id}/ - Update device
    # DELETE /api/devices/{id}/ - Delete device
    # POST /api/devices/{id}/heartbeat/ - Device heartbeat
    # POST /api/devices/{id}/mark_compromised/ - Mark device as compromised
    
    # Session management endpoints (automatically generated):
    # GET /api/sessions/ - List sessions
    # GET /api/sessions/{id}/ - Get session details
    # GET /api/sessions/active/ - Get active sessions
    # POST /api/sessions/{id}/terminate/ - Terminate session
    
    # Security event endpoints (automatically generated):
    # GET /api/security-events/ - List security events
    # GET /api/security-events/{id}/ - Get event details
    # GET /api/security-events/unresolved/ - Get unresolved events
    # GET /api/security-events/critical/ - Get critical events
    # POST /api/security-events/{id}/resolve/ - Resolve security event
]

# Add router URLs to urlpatterns
urlpatterns += router.urls