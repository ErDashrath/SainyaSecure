# Generated by Django 5.2.6 on 2025-09-13 13:28

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MilitaryUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('military_id', models.CharField(help_text='Military ID number', max_length=20, unique=True)),
                ('rank', models.CharField(help_text='Military rank (e.g., Lieutenant, Captain)', max_length=50)),
                ('unit', models.CharField(help_text='Military unit/division', max_length=100)),
                ('branch', models.CharField(choices=[('ARMY', 'Army'), ('NAVY', 'Navy'), ('AIRFORCE', 'Air Force'), ('MARINES', 'Marines'), ('SPECIAL_FORCES', 'Special Forces'), ('INTELLIGENCE', 'Intelligence')], max_length=50)),
                ('clearance_level', models.CharField(choices=[('CONFIDENTIAL', 'Confidential'), ('SECRET', 'Secret'), ('TOP_SECRET', 'Top Secret'), ('TOP_SECRET_SCI', 'Top Secret/SCI')], max_length=20)),
                ('secure_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=100, null=True)),
                ('current_deployment', models.CharField(blank=True, max_length=100, null=True)),
                ('public_key', models.TextField(help_text='RSA public key for message encryption')),
                ('private_key_encrypted', models.TextField(help_text='Encrypted private key')),
                ('last_key_rotation', models.DateTimeField(default=django.utils.timezone.now)),
                ('failed_login_attempts', models.IntegerField(default=0)),
                ('account_locked_until', models.DateTimeField(blank=True, null=True)),
                ('is_active_duty', models.BooleanField(default=True)),
                ('is_deployed', models.BooleanField(default=False)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Military User',
                'verbose_name_plural': 'Military Users',
                'db_table': 'military_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='Device name/identifier', max_length=100)),
                ('device_type', models.CharField(choices=[('RADIO', 'Military Radio'), ('TABLET', 'Military Tablet'), ('LAPTOP', 'Secure Laptop'), ('SMARTPHONE', 'Secure Smartphone'), ('DRONE', 'Drone Communication Unit'), ('VEHICLE', 'Vehicle Communication System'), ('AIRCRAFT', 'Aircraft Communication System'), ('SATELLITE', 'Satellite Terminal')], max_length=20)),
                ('serial_number', models.CharField(max_length=100, unique=True)),
                ('assigned_unit', models.CharField(max_length=100)),
                ('hardware_fingerprint', models.TextField(help_text='Unique hardware identifier')),
                ('firmware_version', models.CharField(max_length=50)),
                ('encryption_capabilities', models.JSONField(default=dict, help_text='Supported encryption methods')),
                ('supports_voice', models.BooleanField(default=True)),
                ('supports_video', models.BooleanField(default=False)),
                ('supports_text', models.BooleanField(default=True)),
                ('supports_file_transfer', models.BooleanField(default=True)),
                ('supports_p2p', models.BooleanField(default=True)),
                ('last_known_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('last_known_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('last_known_location', models.CharField(blank=True, max_length=200)),
                ('connectivity_status', models.CharField(choices=[('ONLINE', 'Online'), ('OFFLINE', 'Offline'), ('LIMITED', 'Limited Connectivity'), ('JAMMED', 'Communication Jammed')], default='OFFLINE', max_length=20)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('COMPROMISED', 'Compromised'), ('MAINTENANCE', 'Under Maintenance'), ('DECOMMISSIONED', 'Decommissioned')], default='ACTIVE', max_length=20)),
                ('last_heartbeat', models.DateTimeField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('battery_level', models.IntegerField(blank=True, help_text='Battery percentage (0-100)', null=True)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Military Device',
                'verbose_name_plural': 'Military Devices',
                'db_table': 'devices',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('login_method', models.CharField(choices=[('PASSWORD', 'Password'), ('BIOMETRIC', 'Biometric'), ('SMART_CARD', 'Smart Card'), ('MULTI_FACTOR', 'Multi-Factor')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('suspicious_activity', models.BooleanField(default=False)),
                ('force_logout_reason', models.CharField(blank=True, max_length=200)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='users.device')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Session',
                'verbose_name_plural': 'User Sessions',
                'db_table': 'user_sessions',
            },
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('LOGIN_SUCCESS', 'Successful Login'), ('LOGIN_FAILED', 'Failed Login'), ('LOGOUT', 'Logout'), ('PASSWORD_CHANGE', 'Password Changed'), ('ACCOUNT_LOCKED', 'Account Locked'), ('SUSPICIOUS_ACTIVITY', 'Suspicious Activity'), ('UNAUTHORIZED_ACCESS', 'Unauthorized Access Attempt'), ('KEY_ROTATION', 'Encryption Key Rotation'), ('DEVICE_REGISTERED', 'Device Registered'), ('DEVICE_COMPROMISED', 'Device Compromised'), ('MESSAGE_ANOMALY', 'Message Anomaly Detected')], max_length=30)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='LOW', max_length=10)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('additional_data', models.JSONField(default=dict, help_text='Additional event context')),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.device')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_events', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.usersession')),
            ],
            options={
                'verbose_name': 'Security Event',
                'verbose_name_plural': 'Security Events',
                'db_table': 'security_events',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='militaryuser',
            index=models.Index(fields=['military_id'], name='military_us_militar_cfc9fb_idx'),
        ),
        migrations.AddIndex(
            model_name='militaryuser',
            index=models.Index(fields=['unit', 'branch'], name='military_us_unit_6d5950_idx'),
        ),
        migrations.AddIndex(
            model_name='militaryuser',
            index=models.Index(fields=['clearance_level'], name='military_us_clearan_08f323_idx'),
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['device_id'], name='devices_device__c4b5e4_idx'),
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['owner', 'status'], name='devices_owner_i_6afdf0_idx'),
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['device_type', 'connectivity_status'], name='devices_device__da9237_idx'),
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['last_heartbeat'], name='devices_last_he_65643a_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['user', 'is_active'], name='user_sessio_user_id_bb1b83_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['device', 'is_active'], name='user_sessio_device__84d7d0_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['started_at'], name='user_sessio_started_8c462e_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['event_type', 'severity'], name='security_ev_event_t_4d4c77_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['user', 'timestamp'], name='security_ev_user_id_6a5f21_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['device', 'timestamp'], name='security_ev_device__0708c6_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['is_resolved'], name='security_ev_is_reso_f0a99f_idx'),
        ),
    ]
