# Generated by Django 5.2.6 on 2025-09-13 13:28

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('widget_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='Widget display name', max_length=100)),
                ('widget_type', models.CharField(choices=[('MESSAGE_VOLUME', 'Message Volume Chart'), ('NETWORK_STATUS', 'Network Status Map'), ('ANOMALY_ALERTS', 'Security Alerts Panel'), ('DEVICE_STATUS', 'Device Status Grid'), ('USER_ACTIVITY', 'User Activity Timeline'), ('PERFORMANCE_METRICS', 'System Performance'), ('MISSION_PROGRESS', 'Mission Progress Tracker'), ('GEOGRAPHIC_MAP', 'Geographic Deployment Map'), ('COMMUNICATION_FLOW', 'Communication Flow Diagram'), ('THREAT_DASHBOARD', 'Threat Intelligence Dashboard')], max_length=20)),
                ('title', models.CharField(help_text='Widget title displayed to users', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Widget description')),
                ('size', models.CharField(choices=[('SMALL', 'Small (1x1)'), ('MEDIUM', 'Medium (2x1)'), ('LARGE', 'Large (2x2)'), ('WIDE', 'Wide (3x1)'), ('EXTRA_LARGE', 'Extra Large (3x2)')], default='MEDIUM', max_length=12)),
                ('dashboard_row', models.IntegerField(default=0, help_text='Grid row position')),
                ('dashboard_column', models.IntegerField(default=0, help_text='Grid column position')),
                ('z_index', models.IntegerField(default=0, help_text='Layer order')),
                ('data_source', models.CharField(help_text='Primary data source', max_length=100)),
                ('data_filters', models.JSONField(default=dict, help_text='Data filtering configuration')),
                ('refresh_interval_seconds', models.IntegerField(default=30, help_text='Auto-refresh interval')),
                ('chart_type', models.CharField(blank=True, help_text='Chart type for data visualization', max_length=20)),
                ('color_scheme', models.CharField(default='military', help_text='Color scheme theme', max_length=20)),
                ('display_options', models.JSONField(default=dict, help_text='Widget display customization')),
                ('visible_to_roles', models.JSONField(default=list, help_text='Roles that can view this widget')),
                ('required_clearance', models.CharField(blank=True, help_text='Minimum clearance required', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_shared', models.BooleanField(default=False, help_text='Available to other users')),
                ('last_data_update', models.DateTimeField(blank=True, null=True)),
                ('view_count', models.IntegerField(default=0)),
                ('average_load_time_ms', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('error_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Dashboard Widget',
                'verbose_name_plural': 'Dashboard Widgets',
                'db_table': 'dashboard_widgets',
                'ordering': ['dashboard_row', 'dashboard_column'],
            },
        ),
        migrations.CreateModel(
            name='MissionReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('mission_name', models.CharField(help_text='Mission codename/identifier', max_length=200)),
                ('mission_description', models.TextField(help_text='Mission description and objectives')),
                ('participating_units', models.JSONField(default=list, help_text='Units involved in mission')),
                ('mission_status', models.CharField(choices=[('PLANNING', 'Mission Planning'), ('ACTIVE', 'Mission Active'), ('COMPLETED', 'Mission Completed'), ('CANCELLED', 'Mission Cancelled'), ('ON_HOLD', 'Mission On Hold')], default='PLANNING', max_length=12)),
                ('classification_level', models.CharField(choices=[('UNCLASSIFIED', 'Unclassified'), ('CONFIDENTIAL', 'Confidential'), ('SECRET', 'Secret'), ('TOP_SECRET', 'Top Secret')], default='CONFIDENTIAL', max_length=15)),
                ('mission_start_time', models.DateTimeField()),
                ('mission_end_time', models.DateTimeField(blank=True, null=True)),
                ('report_period_start', models.DateTimeField()),
                ('report_period_end', models.DateTimeField()),
                ('total_messages_sent', models.IntegerField(default=0)),
                ('total_messages_received', models.IntegerField(default=0)),
                ('voice_calls_count', models.IntegerField(default=0)),
                ('video_calls_count', models.IntegerField(default=0)),
                ('file_transfers_count', models.IntegerField(default=0)),
                ('message_delivery_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('average_response_time_seconds', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('communication_uptime_percent', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('security_incidents_count', models.IntegerField(default=0)),
                ('anomalies_detected_count', models.IntegerField(default=0)),
                ('encryption_compliance_rate', models.DecimalField(decimal_places=2, default=100.0, max_digits=5)),
                ('network_reliability_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('offline_periods_count', models.IntegerField(default=0)),
                ('total_offline_duration_minutes', models.IntegerField(default=0)),
                ('peer_connectivity_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('blockchain_sync_success_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('audit_log_completeness', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('data_integrity_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('objectives_completed', models.IntegerField(default=0)),
                ('total_objectives', models.IntegerField(default=0)),
                ('mission_success_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('executive_summary', models.TextField(blank=True)),
                ('key_findings', models.JSONField(default=list, help_text='Key findings and insights')),
                ('recommendations', models.JSONField(default=list, help_text='Recommendations for improvement')),
                ('lessons_learned', models.TextField(blank=True)),
                ('supporting_documents', models.JSONField(default=list, help_text='Supporting document references')),
                ('data_sources', models.JSONField(default=list, help_text='Data sources used for report')),
            ],
            options={
                'verbose_name': 'Mission Report',
                'verbose_name_plural': 'Mission Reports',
                'db_table': 'mission_reports',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metrics_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('category', models.CharField(choices=[('SYSTEM', 'System Performance'), ('NETWORK', 'Network Performance'), ('DATABASE', 'Database Performance'), ('MESSAGING', 'Messaging System'), ('SECURITY', 'Security Metrics'), ('USER_ACTIVITY', 'User Activity'), ('STORAGE', 'Storage Utilization'), ('BLOCKCHAIN', 'Blockchain Performance')], max_length=15)),
                ('metric_name', models.CharField(help_text='Specific metric name', max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('measurement_interval_seconds', models.IntegerField(default=60)),
                ('value', models.DecimalField(decimal_places=6, help_text='Primary metric value', max_digits=20)),
                ('unit', models.CharField(help_text='Unit of measurement', max_length=20)),
                ('min_value', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('max_value', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('avg_value', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('tags', models.JSONField(default=dict, help_text='Additional metric tags')),
                ('metadata', models.JSONField(default=dict, help_text='Additional metric metadata')),
                ('threshold_warning', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('threshold_critical', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('alert_triggered', models.BooleanField(default=False)),
                ('is_estimated', models.BooleanField(default=False, help_text='Value is estimated/interpolated')),
                ('confidence_score', models.DecimalField(decimal_places=2, default=1.0, max_digits=3)),
            ],
            options={
                'verbose_name': 'System Metrics',
                'verbose_name_plural': 'System Metrics',
                'db_table': 'system_metrics',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserActivitySummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('period_type', models.CharField(choices=[('HOUR', 'Hourly'), ('DAY', 'Daily'), ('WEEK', 'Weekly'), ('MONTH', 'Monthly')], default='DAY', max_length=5)),
                ('messages_sent', models.IntegerField(default=0)),
                ('messages_received', models.IntegerField(default=0)),
                ('conversations_participated', models.IntegerField(default=0)),
                ('voice_calls_made', models.IntegerField(default=0)),
                ('voice_calls_received', models.IntegerField(default=0)),
                ('files_shared', models.IntegerField(default=0)),
                ('total_active_time_minutes', models.IntegerField(default=0)),
                ('average_response_time_seconds', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('peak_activity_hour', models.IntegerField(blank=True, null=True)),
                ('devices_used_count', models.IntegerField(default=0)),
                ('device_switches', models.IntegerField(default=0)),
                ('locations_visited', models.IntegerField(default=0)),
                ('total_distance_km', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('mobility_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('security_events_count', models.IntegerField(default=0)),
                ('failed_login_attempts', models.IntegerField(default=0)),
                ('compliance_score', models.DecimalField(decimal_places=2, default=1.0, max_digits=3)),
                ('communication_efficiency_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('collaboration_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('activity_pattern_consistency', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('anomalous_behavior_detected', models.BooleanField(default=False)),
                ('anomaly_score', models.DecimalField(decimal_places=4, default=0.0, max_digits=5)),
                ('behavior_change_indicators', models.JSONField(default=list)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User Activity Summary',
                'verbose_name_plural': 'User Activity Summaries',
                'db_table': 'user_activity_summaries',
                'ordering': ['-period_start'],
            },
        ),
        migrations.CreateModel(
            name='AlertSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('period_type', models.CharField(choices=[('HOUR', 'Hourly'), ('DAY', 'Daily'), ('WEEK', 'Weekly'), ('MONTH', 'Monthly')], max_length=5)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('critical_alerts', models.IntegerField(default=0)),
                ('high_alerts', models.IntegerField(default=0)),
                ('medium_alerts', models.IntegerField(default=0)),
                ('low_alerts', models.IntegerField(default=0)),
                ('info_alerts', models.IntegerField(default=0)),
                ('total_alerts', models.IntegerField(default=0)),
                ('new_alerts', models.IntegerField(default=0)),
                ('acknowledged_alerts', models.IntegerField(default=0)),
                ('investigating_alerts', models.IntegerField(default=0)),
                ('resolved_alerts', models.IntegerField(default=0)),
                ('false_positive_alerts', models.IntegerField(default=0)),
                ('average_acknowledgment_time_minutes', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('average_resolution_time_minutes', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('overdue_alerts', models.IntegerField(default=0)),
                ('alert_types_distribution', models.JSONField(default=dict, help_text='Distribution by alert type')),
                ('affected_systems', models.JSONField(default=list, help_text='Systems affected by alerts')),
                ('top_alert_sources', models.JSONField(default=list, help_text='Top sources generating alerts')),
                ('alert_trend', models.CharField(choices=[('INCREASING', 'Increasing'), ('STABLE', 'Stable'), ('DECREASING', 'Decreasing')], default='STABLE', max_length=10)),
                ('severity_trend', models.CharField(choices=[('ESCALATING', 'Escalating'), ('STABLE', 'Stable'), ('IMPROVING', 'Improving')], default='STABLE', max_length=10)),
                ('false_positive_rate', models.DecimalField(decimal_places=4, default=0.0, max_digits=5)),
                ('alert_quality_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('response_efficiency_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('data_completeness_percent', models.DecimalField(decimal_places=2, default=100.0, max_digits=5)),
            ],
            options={
                'verbose_name': 'Alert Summary',
                'verbose_name_plural': 'Alert Summaries',
                'db_table': 'alert_summaries',
                'ordering': ['-period_start'],
                'indexes': [models.Index(fields=['period_type', 'period_start'], name='alert_summa_period__8f98b5_idx'), models.Index(fields=['alert_trend', 'severity_trend'], name='alert_summa_alert_t_5d4570_idx')],
                'unique_together': {('period_type', 'period_start', 'period_end')},
            },
        ),
    ]
