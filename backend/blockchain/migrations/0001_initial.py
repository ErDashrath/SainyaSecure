# Generated by Django 5.2.6 on 2025-09-13 13:28

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('log_type', models.CharField(choices=[('MESSAGE_SENT', 'Message Sent'), ('MESSAGE_READ', 'Message Read'), ('FILE_ACCESSED', 'File Accessed'), ('USER_LOGIN', 'User Login'), ('USER_LOGOUT', 'User Logout'), ('SECURITY_EVENT', 'Security Event'), ('SYSTEM_ACCESS', 'System Access'), ('DATA_EXPORT', 'Data Export'), ('ADMIN_ACTION', 'Admin Action'), ('BLOCKCHAIN_SYNC', 'Blockchain Sync')], max_length=20)),
                ('description', models.TextField()),
                ('log_data', models.JSONField(default=dict, help_text='Structured log data')),
                ('previous_log_hash', models.CharField(help_text='Hash of previous log entry', max_length=64)),
                ('log_hash', models.CharField(help_text='Hash of this log entry', max_length=64, unique=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('location_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('location_lon', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('blockchain_anchored', models.BooleanField(default=False)),
                ('blockchain_tx_hash', models.CharField(blank=True, max_length=66)),
                ('anchor_block_number', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'db_table': 'audit_logs',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='BlockchainSyncStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_syncing', models.BooleanField(default=False)),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('next_sync_at', models.DateTimeField(blank=True, null=True)),
                ('sync_interval', models.IntegerField(default=300, help_text='Sync interval in seconds')),
                ('total_blocks_to_sync', models.IntegerField(default=0)),
                ('blocks_synced', models.IntegerField(default=0)),
                ('sync_progress_percent', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('blockchain_height', models.BigIntegerField(default=0, help_text='Latest blockchain height')),
                ('local_height', models.BigIntegerField(default=0, help_text='Local ledger height')),
                ('peer_count', models.IntegerField(default=0, help_text='Connected peer count')),
                ('network_latency_ms', models.IntegerField(blank=True, null=True)),
                ('consecutive_failures', models.IntegerField(default=0)),
                ('last_error', models.TextField(blank=True)),
                ('last_error_at', models.DateTimeField(blank=True, null=True)),
                ('avg_sync_time_seconds', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('blocks_per_second', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Blockchain Sync Status',
                'verbose_name_plural': 'Blockchain Sync Statuses',
                'db_table': 'blockchain_sync_status',
            },
        ),
        migrations.CreateModel(
            name='BlockchainTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tx_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('blockchain_network', models.CharField(choices=[('ETHEREUM_PRIVATE', 'Private Ethereum'), ('ETHEREUM_TESTNET', 'Ethereum Testnet'), ('HYPERLEDGER_FABRIC', 'Hyperledger Fabric'), ('POLYGON', 'Polygon Network')], max_length=20)),
                ('transaction_hash', models.CharField(max_length=66, unique=True)),
                ('block_hash', models.CharField(blank=True, max_length=66)),
                ('block_number', models.BigIntegerField(blank=True, null=True)),
                ('from_address', models.CharField(help_text='Sender blockchain address', max_length=42)),
                ('to_address', models.CharField(help_text='Recipient blockchain address', max_length=42)),
                ('gas_used', models.BigIntegerField(blank=True, null=True)),
                ('gas_price', models.BigIntegerField(blank=True, null=True)),
                ('transaction_fee', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('FAILED', 'Failed'), ('DROPPED', 'Dropped')], default='PENDING', max_length=10)),
                ('confirmations', models.IntegerField(default=0)),
                ('required_confirmations', models.IntegerField(default=6)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('failed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('next_retry_at', models.DateTimeField(blank=True, null=True)),
                ('contract_address', models.CharField(blank=True, max_length=42)),
                ('contract_method', models.CharField(blank=True, max_length=100)),
                ('contract_data', models.TextField(blank=True, help_text='Contract interaction data')),
            ],
            options={
                'verbose_name': 'Blockchain Transaction',
                'verbose_name_plural': 'Blockchain Transactions',
                'db_table': 'blockchain_transactions',
            },
        ),
        migrations.CreateModel(
            name='LocalLedgerBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('block_number', models.BigIntegerField(help_text='Sequential block number')),
                ('previous_block_hash', models.CharField(help_text='Hash of previous block', max_length=64)),
                ('block_hash', models.CharField(help_text='Current block hash', max_length=64, unique=True)),
                ('merkle_root', models.CharField(help_text='Merkle tree root of transactions', max_length=64)),
                ('transaction_count', models.IntegerField(default=0)),
                ('device_location_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('device_location_lon', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('offline_timestamp', models.DateTimeField(help_text='Timestamp when created offline')),
                ('sync_status', models.CharField(choices=[('PENDING', 'Pending Sync'), ('SYNCING', 'Syncing to Blockchain'), ('CONFIRMED', 'Confirmed on Blockchain'), ('FAILED', 'Sync Failed'), ('ORPHANED', 'Orphaned Block')], default='PENDING', max_length=10)),
                ('blockchain_tx_hash', models.CharField(blank=True, help_text='Ethereum transaction hash', max_length=66)),
                ('blockchain_block_number', models.BigIntegerField(blank=True, null=True)),
                ('sync_attempts', models.IntegerField(default=0)),
                ('last_sync_attempt', models.DateTimeField(blank=True, null=True)),
                ('sync_error', models.TextField(blank=True)),
                ('nonce', models.BigIntegerField(default=0, help_text='Proof of work nonce')),
                ('difficulty', models.IntegerField(default=1, help_text='Mining difficulty')),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_signature', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Local Ledger Block',
                'verbose_name_plural': 'Local Ledger Blocks',
                'db_table': 'local_ledger_blocks',
                'ordering': ['block_number'],
            },
        ),
        migrations.CreateModel(
            name='MessageTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('transaction_index', models.IntegerField(help_text='Index within the block')),
                ('transaction_type', models.CharField(choices=[('MESSAGE_SENT', 'Message Sent'), ('MESSAGE_DELIVERED', 'Message Delivered'), ('MESSAGE_READ', 'Message Read'), ('MESSAGE_DELETED', 'Message Deleted'), ('FILE_TRANSFERRED', 'File Transferred'), ('VOICE_CALL', 'Voice Call'), ('VIDEO_CALL', 'Video Call')], max_length=20)),
                ('transaction_data_encrypted', models.TextField(help_text='Encrypted transaction details')),
                ('transaction_hash', models.CharField(max_length=64, unique=True)),
                ('digital_signature', models.TextField(help_text="Sender's digital signature")),
                ('is_signature_valid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('message_timestamp', models.DateTimeField(help_text='Original message timestamp')),
                ('device_fingerprint', models.TextField(help_text='Device fingerprint at time of transaction')),
                ('location_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('location_lon', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('network_info', models.JSONField(default=dict, help_text='Network context information')),
            ],
            options={
                'verbose_name': 'Message Transaction',
                'verbose_name_plural': 'Message Transactions',
                'db_table': 'message_transactions',
                'ordering': ['block', 'transaction_index'],
            },
        ),
    ]
